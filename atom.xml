<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Блог о программировании и аналитике</title>
  
  <link href="/blog/atom.xml" rel="self"/>
  
  <link href="http://confar.github.io/blog/"/>
  <updated>2017-10-20T15:50:58.654Z</updated>
  <id>http://confar.github.io/blog/</id>
  
  <author>
    <name>Confar</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Пишем веб-приложение на Django</title>
    <link href="http://confar.github.io/blog/2017/10/16/%D0%9F%D0%B8%D1%88%D0%B5%D0%BC-%D0%B2%D0%B5%D0%B1-%D0%BF%D1%80%D0%B8%D0%BB%D0%BE%D0%B6%D0%B5%D0%BD%D0%B8%D0%B5-%D0%BD%D0%B0-Django/"/>
    <id>http://confar.github.io/blog/2017/10/16/Пишем-веб-приложение-на-Django/</id>
    <published>2017-10-16T12:13:04.000Z</published>
    <updated>2017-10-20T15:50:58.654Z</updated>
    
    <content type="html"><![CDATA[<p>В этой части будем реализовывать механизм авторизации пользователей через страницы логина и регистрации.</p>
<h1 id="Создание-проекта"><a href="#Создание-проекта" class="headerlink" title="Создание проекта"></a>Создание проекта</h1><p>Для начала создадим проект myproject через консоль в нужной нам папке и перейдем в папку проекта. Внутри проекта создадим приложение джанго - registration</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ django-admin startproject myproject</div><div class="line">$ <span class="built_in">cd</span> myproject</div><div class="line">$ python manage.py startapp registration</div></pre></td></tr></table></figure>
<p>теперь структура внутри registration выглядит следующим образом</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">│   admin.py</div><div class="line">│   apps.py</div><div class="line">│   models.py</div><div class="line">│   tests.py</div><div class="line">│   views.py</div><div class="line">│   __init__.py</div><div class="line">│</div><div class="line">└───migrations</div></pre></td></tr></table></figure>
<p>Так как в Django реализована архитектура <a href="https://ru.wikipedia.org/wiki/Model-View-Controller" target="_blank" rel="external">MVC</a>, то в нашем случае “M” - models.py, это файл, где прописывается логика взаимодействия с базой данных, “C”, в случае Django “Template”, это представление данных в браузере через html, а views это бизнес-логика, как применять модели и шаблоны. Годная картинка по теме:</p>
<img src="/blog/2017/10/16/Пишем-веб-приложение-на-Django/MTV.png" alt="MTV" title="MTV">
<p>Так как авторизация в нашем случае для тестового проекта, а не для большого e-commerce сайта, то реализуем взаимодействие с базой данных не через models.py, а через форму и встроенную в Django модель User, так что файл models.py можем удалять, как и tests.py - в этой части мы их оставим. Теперь структура нашего приложения выглядит так:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">│   admin.py</div><div class="line">│   apps.py</div><div class="line">│   forms.py</div><div class="line">│   views.py</div><div class="line">│   __init__.py</div><div class="line">│</div><div class="line">└───migrations</div></pre></td></tr></table></figure>
<p>Всего у нас будет три страницы html: для тех, кто пришел в первый раз(login.html), для регистрации(register.html) и для тех, кто успешно прошел регистрацию и зашел через логин(success.html).</p>
<p>Итого у нас два use-case</p>
<ul>
<li>для пришедших в первый раз: login -&gt; register -&gt; login -&gt; success</li>
<li>для пришедших повторно login -&gt; success</li>
</ul>
<p>Обрабатывать результаты будем через формы и регистрационные данные записывать в базу данных sqlite3(которая создается по умолчанию для проекта Django). Перейдем к коду.</p>
<h1 id="Находим-наши-страницы"><a href="#Находим-наши-страницы" class="headerlink" title="Находим наши страницы"></a>Находим наши страницы</h1><p>Для примера возьмем бутстраповские страницы <a href="https://bootsnipp.com/snippets/featured/sign-in-panel" target="_blank" rel="external">логина</a> и <a href="https://bootsnipp.com/snippets/featured/registration-form" target="_blank" rel="external">регистрации</a> и немного их изменим, дополнив тегами Jinja2.</p>
<p>Все темплейты хранятся в папке templates, которую мы создадим в основном проекте.Таким образом, структура проекта со всеми добавленными темплейтами будет выглядеть так:</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">|-- myproject</div><div class="line">|   `-- __pycache__</div><div class="line">|-- registration</div><div class="line">|   |-- __pycache__</div><div class="line">|   `-- migrations</div><div class="line">|       `-- __pycache__</div><div class="line">|-- templates</div><div class="line">|   -- base.html</div><div class="line">|   -- login.html</div><div class="line">|   -- register.html</div><div class="line">`   -- success.html</div></pre></td></tr></table></figure>
<p>Код страницы логина. При сабмите формы идет ссылка на функцию account<em>login c post запросом.{% csrf_token %} это обеспечение безопасности от [межсайтовой подделки запроса](<a href="https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%B6%D1%81%D0%B0%D0%B9%D1%82%D0%BE%D0%B2%D0%B0%D1%8F" target="_blank" rel="external">https://ru.wikipedia.org/wiki/%D0%9C%D0%B5%D0%B6%D1%81%D0%B0%D0%B9%D1%82%D0%BE%D0%B2%D0%B0%D1%8F</a></em>%D0%BF%D0%BE%D0%B4%D0%B4%D0%B5%D0%BB%D0%BA%D0%B0_%D0%B7%D0%B0%D0%BF%D1%80%D0%BE%D1%81%D0%B0). Используется в формах в связи с post-запросами. Они опаснее обычных get запросов, т.к. взаимодействуют с базой данных.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line">&#123;% extends "base.html" %&#125;</div><div class="line">&#123;% block title %&#125;Login&#123;% endblock %&#125;</div><div class="line">&#123;% block content %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top:40px"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-6 col-md-4 col-md-offset-4"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">strong</span>&gt;</span> Sign in to continue<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></div><div class="line">&#123;% if error %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>Please enter a correct username and password.</div><div class="line">Note that both fields may be case-sensitive.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></div><div class="line">&#123;% endif %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">action</span>=<span class="string">"&#123;% url "</span><span class="attr">account_login</span>" %&#125;" <span class="attr">method</span>=<span class="string">"POST"</span>&gt;</span>&#123;% csrf_token %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">fieldset</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"center-block"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">"profile-img"</span></span></div><div class="line"><span class="tag">    <span class="attr">src</span>=<span class="string">"http://bit.ly/2gSVBOy"</span></span></div><div class="line"><span class="tag">    <span class="attr">alt</span>=<span class="string">""</span> <span class="attr">style</span>=<span class="string">"width: 96px; height: 96px; margin: 0 auto 10px;</span></span></div><div class="line"><span class="tag"><span class="string">    display: block; -moz-border-radius: 50%; -webkit-border-radius: 50%;</span></span></div><div class="line"><span class="tag"><span class="string">     border-radius: 50%;"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-sm-12 col-md-10  col-md-offset-1 "</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-user"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Username"</span></span></div><div class="line"><span class="tag">        <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">autofocus</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"input-group"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"input-group-addon"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">i</span> <span class="attr">class</span>=<span class="string">"glyphicon glyphicon-lock"</span>&gt;</span><span class="tag">&lt;/<span class="name">i</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"form-control"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span> <span class="attr">name</span>=<span class="string">"password"</span></span></div><div class="line"><span class="tag">        <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">value</span>=<span class="string">""</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-lg btn-primary btn-block"</span>&gt;</span>Sign in</div><div class="line">    <span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-footer"</span> <span class="attr">style</span>=<span class="string">"padding: 1px 15px;</span></span></div><div class="line"><span class="tag"><span class="string">color: #A0A0A0"</span>&gt;</span></div><div class="line">Don't have an account? <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;% url "</span><span class="attr">account_register</span>" %&#125;"&gt;</span> Sign Up Here <span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>Как выглядит в браузере</p>
<img src="/blog/2017/10/16/Пишем-веб-приложение-на-Django/login.png" alt="login" title="login">
<p>Код страницы регистрации с валидацией ошибок. При сабмите формы также идет ссылка на функцию account_register c post запросом.</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div></pre></td><td class="code"><pre><div class="line">&#123;% extends "base.html" %&#125; &#123;% block title %&#125;Register&#123;% endblock %&#125;</div><div class="line">&#123;% block content %&#125;</div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"container"</span> <span class="attr">style</span>=<span class="string">"margin-top: 60px"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row centered-form"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-12 col-sm-8 col-md-4 col-sm-offset-2</span></span></div><div class="line"><span class="tag"><span class="string">col-md-offset-4"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel panel-default"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-heading"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">"panel-title"</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"panel-body"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">method</span>=<span class="string">"POST"</span> <span class="attr">action</span>=<span class="string">"&#123;% url "</span></span></div><div class="line"><span class="tag"><span class="attr">account_register</span>"  %&#125;"&gt;</span>&#123;% csrf_token %&#125;</div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.username %&#125;</span></span></div><div class="line"><span class="tag"><span class="string">    has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"username"</span> <span class="attr">name</span>=<span class="string">"username"</span></span></div><div class="line"><span class="tag">        <span class="attr">id</span>=<span class="string">"username"</span> <span class="attr">class</span>=<span class="string">"form-control input-sm"</span></span></div><div class="line"><span class="tag">        <span class="attr">placeholder</span>=<span class="string">"Username"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span></div><div class="line">        &#123;&#123; errors.username|striptags &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-6 col-md-6"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.first_name %&#125; has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"first_name"</span></span></div><div class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"first_name"</span></span></div><div class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">"form-control input-sm"</span></span></div><div class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"First Name"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span></div><div class="line">                &#123;&#123; errors.first_name|striptags &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-6 col-md-6"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.last_name %&#125; has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"last_name"</span></span></div><div class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"last_name"</span></span></div><div class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">"form-control input-sm"</span></span></div><div class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"Last Name"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span></div><div class="line">                &#123;&#123; errors.last_name|striptags &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.email %&#125; has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"email"</span></span></div><div class="line"><span class="tag">        <span class="attr">class</span>=<span class="string">"form-control input-sm"</span> <span class="attr">placeholder</span>=<span class="string">"Email Address"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>&#123;&#123; errors.email|striptags &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"row"</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-6 col-md-6"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.password %&#125; has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">id</span>=<span class="string">"password"</span></span></div><div class="line"><span class="tag">                <span class="attr">class</span>=<span class="string">"form-control input-sm"</span> <span class="attr">placeholder</span>=<span class="string">"Password"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"text-danger"</span>&gt;</span>&#123;&#123; errors.password|striptags &#125;&#125;</div><div class="line">                <span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-xs-6 col-sm-6 col-md-6"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">div</span></span></div><div class="line"><span class="tag">            <span class="attr">class</span>=<span class="string">"form-group&#123;% if errors.password %&#125; has-error&#123;% endif %&#125;"</span>&gt;</span></div><div class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"confirm_password"</span></span></div><div class="line"><span class="tag">                <span class="attr">id</span>=<span class="string">"confirm_password"</span> <span class="attr">class</span>=<span class="string">"form-control input-sm"</span></span></div><div class="line"><span class="tag">                <span class="attr">placeholder</span>=<span class="string">"Confirm Password"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"btn btn-info btn-block"</span>&gt;</span>Register<span class="tag">&lt;/<span class="name">button</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></div><div class="line">&#123;% endblock %&#125;</div></pre></td></tr></table></figure>
<p>Как выглядит страница регистрации</p>
<img src="/blog/2017/10/16/Пишем-веб-приложение-на-Django/register.png" alt="register" title="register">
<p>И страницу успешного входа мы увидим уже в конце, если у нас все получится=)</p>
<p>В начале каждого документа стоит тег {% extends "base.html" %}, что является расширением одного темплейта на базе основного, в Джанго основной темплейт классически называется base.html. Это удобно, так как не приходится копировать один и тот же код в хедере разных страниц. Получается, что весь контент отдельной страницы помещается между тегами {% block content %} и {% endblock %} . Подробнее можно почитать <a href="https://tutorial.djangogirls.org/en/template_extending/" target="_blank" rel="external">здесь</a>.</p>
<p>Содержание base.html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"</span></span></div><div class="line"><span class="tag">  <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">integrity</span>=<span class="string">"sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"</span> <span class="attr">crossorigin</span>=<span class="string">"anonymous"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, initial-scale=1"</span>&gt;</span></div><div class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>&#123;% block title %&#125;</div><div class="line">    &#123;% endblock %&#125; | Auth app<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">    &#123;% block content %&#125;</div><div class="line">    &#123;% endblock %&#125;</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<h1 id="Пишем-вьюжки"><a href="#Пишем-вьюжки" class="headerlink" title="Пишем вьюжки"></a>Пишем вьюжки</h1><p>Для обработки страниц в файле views.py пишем три функции на каждую из страниц (login,register,success) и одну функцию logout. Импортируем нужные нам модули Django, из интересных штук тут есть <a href="https://habrahabr.ru/post/141411/" target="_blank" rel="external">декоратор</a> login_required, который “дополняет” функцию успешного входа - success(), проверяя прошел ли предварительно логин в системе.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.contrib.auth.decorators <span class="keyword">import</span> login_required</div><div class="line"><span class="keyword">from</span> django.contrib.auth.forms <span class="keyword">import</span> AuthenticationForm</div><div class="line"><span class="keyword">from</span> django.contrib.auth.models <span class="keyword">import</span> User</div><div class="line"><span class="keyword">from</span> django.contrib.auth <span class="keyword">import</span> login, logout</div><div class="line"><span class="keyword">from</span> django.template.response <span class="keyword">import</span> TemplateResponse</div><div class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponseRedirect</div><div class="line"><span class="keyword">from</span> django.urls <span class="keyword">import</span> reverse</div><div class="line"></div><div class="line"><span class="keyword">from</span> .forms <span class="keyword">import</span> UserCreateForm</div><div class="line"></div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">login</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="string">""" Функция, которая принимает http-запрос, если произведен get-запрос,</span></div><div class="line"><span class="string">    возвращает страницу логина. Если post-запрос, берет данные из базы данных,</span></div><div class="line"><span class="string">    и проверяет логин и пароль с помощью встроенной формы AuthenticationForm,</span></div><div class="line"><span class="string">    при успешном сценарии вызывает метод login, который принимает объект</span></div><div class="line"><span class="string">    реквеста и юзера, сохраняет id usera в сессию Django</span></div><div class="line"><span class="string">    и возвращает страницу success """</span></div><div class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</div><div class="line">        form = AuthenticationForm(data=request.POST)</div><div class="line">        <span class="keyword">if</span> form.is_valid():</div><div class="line">            login(request, form.user_cache)</div><div class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'account_success'</span>))</div><div class="line">        <span class="keyword">else</span>:</div><div class="line">            <span class="keyword">return</span> TemplateResponse(request, <span class="string">'login.html'</span>, &#123;<span class="string">'error'</span>: <span class="keyword">True</span>&#125;)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> TemplateResponse(request, <span class="string">'login.html'</span>, &#123;&#125;)</div><div class="line"></div><div class="line"></div><div class="line"></div><div class="line"><span class="meta">@login_required</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">success</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="string">""" Функция, которая принимает http-запрос get и возвращает страницу</span></div><div class="line"><span class="string">    success, если пользователь успешно залогинен."""</span></div><div class="line">    <span class="keyword">return</span> TemplateResponse(request, <span class="string">'success.html'</span>, &#123;&#125;)</div><div class="line"></div><div class="line"><span class="meta">@login_required</span></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">account_logout</span><span class="params">(request)</span>:</span></div><div class="line"><span class="string">""" Функция, которая принимает http-запрос и разлогинивает пользователя. """</span></div><div class="line">    logout(request)</div><div class="line">    <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'account_login'</span>))</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">def</span> <span class="title">account_register</span><span class="params">(request)</span>:</span></div><div class="line">    <span class="string">""" Функция, которая принимает http запрос, если произведен get-запрос,</span></div><div class="line"><span class="string">    возвращает страницу регистрации. Если post-запрос, проверяет форму</span></div><div class="line"><span class="string">    UserCreateForm на валидность, при успешном завершении заносит данные в</span></div><div class="line"><span class="string">    таблицу auth_user в базу. При успешном сценарии возвращает обратно на</span></div><div class="line"><span class="string">    страницу логина """</span></div><div class="line">    form = UserCreateForm()</div><div class="line">    <span class="keyword">if</span> request.method == <span class="string">'POST'</span>:</div><div class="line">        form = UserCreateForm(data=request.POST)</div><div class="line">        <span class="keyword">if</span> form.is_valid():</div><div class="line">            user = User(</div><div class="line">                username=form.cleaned_data.get(<span class="string">'username'</span>),</div><div class="line">                email=form.cleaned_data.get(<span class="string">'email'</span>),</div><div class="line">                first_name=form.cleaned_data.get(<span class="string">'first_name'</span>),</div><div class="line">                last_name=form.cleaned_data.get(<span class="string">'last_name'</span>)</div><div class="line">            )</div><div class="line">            user.set_password(form.cleaned_data.get(<span class="string">'password'</span>))</div><div class="line">            user.save()</div><div class="line">            <span class="keyword">return</span> HttpResponseRedirect(reverse(<span class="string">'account_login'</span>))</div><div class="line">        <span class="keyword">return</span> TemplateResponse(request, <span class="string">'register.html'</span>, &#123;<span class="string">'errors'</span>: form.errors&#125;)</div><div class="line">    <span class="keyword">else</span>:</div><div class="line">        <span class="keyword">return</span> TemplateResponse(request, <span class="string">'register.html'</span>, &#123;<span class="string">"form"</span>: form&#125;)</div></pre></td></tr></table></figure>
<h1 id="Разбираемся-с-формами"><a href="#Разбираемся-с-формами" class="headerlink" title="Разбираемся с формами"></a>Разбираемся с формами</h1><p>В функции register мы ссылаемся на форму UserCreateForm, которая находится в forms.py. В этом файле мы прописываем нужные нам поля из страницы регистрации. Функция clean() выполняет роль проверки совпадения значений, которые пользователь указывает в  “введите пароль” и “повторно введите пароль”.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.forms <span class="keyword">import</span> Form, CharField, EmailField</div><div class="line"><span class="keyword">from</span> django.forms.utils <span class="keyword">import</span> ErrorList</div><div class="line"></div><div class="line"></div><div class="line"><span class="class"><span class="keyword">class</span> <span class="title">RegistrationForm</span><span class="params">(Form)</span>:</span></div><div class="line">    username = CharField(required=<span class="keyword">True</span>)</div><div class="line">    email = EmailField(required=<span class="keyword">True</span>)</div><div class="line">    password = CharField(required=<span class="keyword">True</span>)</div><div class="line">    confirm_password = CharField(required=<span class="keyword">True</span>)</div><div class="line">    first_name = CharField(required=<span class="keyword">False</span>)</div><div class="line">    last_name = CharField(required=<span class="keyword">False</span>)</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">def</span> <span class="title">clean</span><span class="params">(self)</span>:</span></div><div class="line">        cleaned_data = super(RegistrationForm, self).clean()</div><div class="line"></div><div class="line">        <span class="keyword">if</span> cleaned_data.get(<span class="string">'password'</span>) != cleaned_data.get(<span class="string">'confirm_password'</span>):</div><div class="line">            self._errors[<span class="string">'password'</span>] = ErrorList(<span class="string">'The passwords you entered do not match'</span>)</div><div class="line"></div><div class="line">        <span class="keyword">return</span> cleaned_data</div><div class="line"></div></pre></td></tr></table></figure>
<h1 id="Конфигурация-URL-ов"><a href="#Конфигурация-URL-ов" class="headerlink" title="Конфигурация URL-ов"></a>Конфигурация URL-ов</h1><p>Теперь самое время настроить ссылки, по которым мы будем обращаться к нашим функциям во views. Для этого в файле urls.py внутри папки приложения registration пропишем следующее:<br><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url</div><div class="line"><span class="keyword">from</span> registration <span class="keyword">import</span> views</div><div class="line"></div><div class="line"></div><div class="line">urlpatterns = [</div><div class="line">    url(<span class="string">r'^login/'</span>, views.account_login, name=<span class="string">'account_login'</span>),</div><div class="line">    url(<span class="string">r'^success/'</span>, views.account_success, name=<span class="string">'account_success'</span>),</div><div class="line">    url(<span class="string">r'^register/'</span>, views.account_register, name=<span class="string">'account_register'</span>),</div><div class="line">    url(<span class="string">r'^logout/'</span>, views.account_logout, name=<span class="string">'account_logout'</span>),</div><div class="line">]</div></pre></td></tr></table></figure></p>
<p>Таким образом, мы обозначаем, что если пользователь ввел ссылку <a href="http://адресприложения/account/login" target="_blank" rel="external">http://адресприложения/account/login</a>, то вызывается функция views.login, если другой запрос - остальные ссылки по аналогии. Для конфигурации ссылок в Джанго используются регулярные выражения, тема обширная, думаю, для отдельной статьи. Пока что просто воспримем как есть.</p>
<p>Затем включим эти url в наше основное приложение - myproject, чтобы обращаться к приложению registration. Для этого в папке myproject в файле urls.py исправим следующее</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">from</span> django.conf.urls <span class="keyword">import</span> url, include <span class="comment"># добавляем метод include</span></div><div class="line"><span class="keyword">from</span> django.contrib <span class="keyword">import</span> admin <span class="comment"># это прописывается автоматически, не меняем</span></div><div class="line"></div><div class="line"></div><div class="line">urlpatterns = [</div><div class="line">    url(<span class="string">r'^admin/'</span>, admin.site.urls), <span class="comment"># также не меняем</span></div><div class="line">    url(<span class="string">r'^account/'</span>, include(<span class="string">'registration.urls'</span>)) <span class="comment"># добавляем urls нашего приложения registration</span></div><div class="line">]</div></pre></td></tr></table></figure>
<p>Теперь мы должны получить страницу логина при входе. Таким образом, ссылки как бы нанизываются друг на друга. account + login в url передаст в браузер нужную нас страницу логина. Попробуем. Для корректной работы формы сделаем миграцию базы данных и запустим проект.</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">$ python manage.py makemigrations</div><div class="line">$ python manage.py migrate</div><div class="line">$ python manage.py runserver</div></pre></td></tr></table></figure>
<h1 id="Результаты"><a href="#Результаты" class="headerlink" title="Результаты"></a>Результаты</h1><img src="/blog/2017/10/16/Пишем-веб-приложение-на-Django/test.gif" alt="gif" title="gif">
<p>Ну чтож, даже ребята со стоковых фото считают, что мы молодцы. Уж они явно что-то знают.</p>
<img src="/blog/2017/10/16/Пишем-веб-приложение-на-Django/success.png" alt="Успешно" title="Успешно">
<p>Код этой статьи можно найти в моем <a href="https://github.com/confar/Django-auth-app" target="_blank" rel="external">репозитории</a> на github.</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;В этой части будем реализовывать механизм авторизации пользователей через страницы логина и регистрации.&lt;/p&gt;
&lt;h1 id=&quot;Создание-проекта&quot;&gt;&lt;a
    
    </summary>
    
    
      <category term="python" scheme="http://confar.github.io/blog/tags/python/"/>
    
      <category term="Django" scheme="http://confar.github.io/blog/tags/Django/"/>
    
      <category term="web" scheme="http://confar.github.io/blog/tags/web/"/>
    
      <category term="bootstrap" scheme="http://confar.github.io/blog/tags/bootstrap/"/>
    
  </entry>
  
  <entry>
    <title>Web Scraping средствами Beautiful Soup</title>
    <link href="http://confar.github.io/blog/2017/10/16/web-scraping/"/>
    <id>http://confar.github.io/blog/2017/10/16/web-scraping/</id>
    <published>2017-10-16T11:35:12.000Z</published>
    <updated>2017-10-20T15:50:16.942Z</updated>
    
    <content type="html"><![CDATA[<p>Сегодня поговорим о веб скрапинге. Допустим, стоит задача выгрузить информацию с сайта или нескольких и представить ее в таблице. Для примера я возьму techcrunch и mashable. На выходе хочу получить таблицу с колонками [текст], [краткое описание], [ссылка], чтобы не тратить время на бесконечное зависание на сайтах, ну вы знаете как это бывает=)</p>
<h1 id="Библиотеки"><a href="#Библиотеки" class="headerlink" title="Библиотеки"></a>Библиотеки</h1><p>Начнем с импорта. Для работы с http лучший выбор это requests, а для парсинга html будем классически работать с Beautiful Soup. Ну и pandas для удобной работы с данными и выгрузки в csv.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">import</span> requests</div><div class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</div><div class="line"><span class="keyword">from</span> numpy <span class="keyword">import</span> nan <span class="keyword">as</span> NaN</div><div class="line"><span class="keyword">import</span> pandas <span class="keyword">as</span> pd</div></pre></td></tr></table></figure>
<h1 id="Нахождение-нужных-нам-элементов"><a href="#Нахождение-нужных-нам-элементов" class="headerlink" title="Нахождение нужных нам элементов"></a>Нахождение нужных нам элементов</h1><p>Напишем скрипт, выполняющий get-запрос, записав его в переменную, затем преобразуем полученный текст страницы в объект BeautifulSoup.<br>В качестве аргумента get-запроса передадим ссылку на раздел startups, там все веселье.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">r1 = requests.get(<span class="string">'https://techcrunch.com/startups/'</span>)</div><div class="line">soup = BeautifulSoup(r1.text, <span class="string">'html.parser'</span>)</div></pre></td></tr></table></figure>
<p>Здесь мы получим на выходе кусок html, который выглядит примерно так(для примера приведен только отрывок).</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"subnav-channel"</span> <span class="attr">data-omni-sm-delegate</span>=<span class="string">"gbl_mainnav"</span>&gt;</span><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category current-menu-item menu-item-899745"</span> <span class="attr">id</span>=<span class="string">"menu-item-899745"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/startups/"</span>&gt;</span>Startups<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category current-post-ancestor current-menu-parent current-post-parent menu-item-899746"</span> <span class="attr">id</span>=<span class="string">"menu-item-899746"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/mobile/"</span>&gt;</span>Mobile<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-899747"</span> <span class="attr">id</span>=<span class="string">"menu-item-899747"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/gadgets/"</span>&gt;</span>Gadgets<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-899748"</span> <span class="attr">id</span>=<span class="string">"menu-item-899748"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/enterprise/"</span>&gt;</span>Enterprise<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-899749"</span> <span class="attr">id</span>=<span class="string">"menu-item-899749"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/social/"</span>&gt;</span>Social<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-taxonomy menu-item-object-category menu-item-899750"</span> <span class="attr">id</span>=<span class="string">"menu-item-899750"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"https://techcrunch.com/europe/"</span>&gt;</span>Europe<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"menu-item menu-item-type-custom menu-item-object-custom menu-item-901944"</span> <span class="attr">id</span>=<span class="string">"menu-item-901944"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/asia"</span>&gt;</span>Asia<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></div></pre></td></tr></table></figure>
<p>Открываем нашу ссылку в браузере через F12 и находим нужные нам элементы - тег с названием(будем искать по title), описанием(description) и url.</p>
<p>В случае с techcrunch все нужные нам ссылки находятся в “диве” block-content, в котором находится каждый пост.</p>
<img src="/blog/2017/10/16/web-scraping/block-content.png" alt="block-content" title="block-content">
<p>Для подобного сценария в BS есть команда find_all(), которая находит <em>все</em> возможные вхождения тега с заданными параметрами.<br>Затем мы создаем простой for луп и пустой список, куда записываем нужные нам данные, которые также ищем по тегам внутри block-content.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">resultstech = soup.find_all(<span class="string">'div'</span>, <span class="string">'block-content'</span>,)</div><div class="line">recordstech = []</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> resultstech:</div><div class="line">    title = result.find(<span class="string">'h2'</span>).text.strip()</div><div class="line">    desc = result.find(<span class="string">'p'</span>, <span class="string">'excerpt'</span>).text[:<span class="number">-10</span>].strip()</div><div class="line">    link = result.find(<span class="string">'a'</span>)[<span class="string">'href'</span>]</div><div class="line">    recordstech.append((title, desc, link))</div></pre></td></tr></table></figure>
<p>Для удобства обрезаем пробелы с помощью метода strip(), и последние десять символов в desc, обратившись к ним по индексу[:-10], т.к. они представляют собой фразу “Read More” для каждого поста.</p>
<p>На выходе мы получили список из кортежей, где находятся наши данные.</p>
<h2 id="Проделаем-тоже-самое-с-mashable"><a href="#Проделаем-тоже-самое-с-mashable" class="headerlink" title="Проделаем тоже самое с mashable"></a>Проделаем тоже самое с mashable</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">r2 = requests.get(<span class="string">'http://mashable.com/tech/'</span>)</div><div class="line">soup = BeautifulSoup(r2.text, <span class="string">'html.parser'</span>)</div><div class="line"></div><div class="line">resultsmash = soup.find_all(<span class="string">'article'</span>)</div><div class="line">recordsmash = []</div><div class="line"><span class="keyword">for</span> result <span class="keyword">in</span> resultsmash:</div><div class="line">    title = result.find(<span class="string">'h1'</span>).text</div><div class="line">    link = result.find(<span class="string">'a'</span>)[<span class="string">'href'</span>]</div><div class="line">    recordsmash.append((title, link))</div></pre></td></tr></table></figure>
<p>Тут не всегда есть подробные описания, поэтому мы остановимся на названии и ссылке.</p>
<h1 id="Обработка-с-помощью-pandas"><a href="#Обработка-с-помощью-pandas" class="headerlink" title="Обработка с помощью pandas"></a>Обработка с помощью pandas</h1><p>Создадим два датафрейма pandas для того, чтобы красиво соединить наши данные. Для визуального разделения данных сделаем пустой ряд - empty row с помощью вставки not a number - “NaN” из numpy, после каждого набора данных.</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">dftech = pd.DataFrame(recordstech, columns=[<span class="string">'title'</span>, <span class="string">'desc'</span>, <span class="string">'link'</span>])</div><div class="line">empty_row3 = pd.Series([NaN, NaN, NaN], index=[<span class="string">'title'</span>, <span class="string">'desc'</span>, <span class="string">'link'</span>])</div><div class="line">dftech_empty_row = dftech.append(empty_row3, ignore_index=<span class="keyword">True</span>)</div><div class="line"></div><div class="line">dfmash = pd.DataFrame(recordsmash, columns=[<span class="string">'title'</span>, <span class="string">'link'</span>])</div><div class="line">empty_row2 = pd.Series([NaN, NaN], index=[<span class="string">'title'</span>, <span class="string">'link'</span>])</div><div class="line">dfmash_empty_row = dfmash.append(empty_row2, ignore_index=<span class="keyword">True</span>)</div></pre></td></tr></table></figure>
<p>После этого соединим наши датафреймы с помощью метода concat()</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">frames = [dftech_empty_row, dfmash_empty_row]</div><div class="line">results = pd.concat(frames)</div></pre></td></tr></table></figure>
<h1 id="Открываем-таблицу"><a href="#Открываем-таблицу" class="headerlink" title="Открываем таблицу"></a>Открываем таблицу</h1><p>Запишем результаты в csv</p>
<figure class="highlight python"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">results.to_csv(<span class="string">'parsing.csv'</span>), index=<span class="keyword">False</span>, encoding=<span class="string">'utf-8'</span>)</div></pre></td></tr></table></figure>
<ul>
<li>откроем csv файл с помощью текстового редактора и зададим разделение sep=, в самом начале  если нужно открыть в экселе</li>
<li>либо откроем в google sheets</li>
</ul>
<p>Картинка ниже как именно выглядит результат</p>
<img src="/blog/2017/10/16/web-scraping/result.png" alt="result" title="result">
<p>Готово. Можете применить подобную операцию ко всем сайтам в интересной вам индустрии, и на выходе получить сводку всех новостей в одном таблице, определив что вам полезно, а что нет. И не тратить время на бесконечный скроллинг веба=)</p>
<blockquote>
<p>Предварительно ознакомьтесь с правилами сайта, для этого прибавьте к корневому url адресу /robots.txt и узнайте, можно ли его “скрейпить”.</p>
</blockquote>
<p>Некоторые сайты предоставляют отдельное api для скрейпинга, но об этом уже в другой раз.</p>
<h1 id="Ссылки"><a href="#Ссылки" class="headerlink" title="Ссылки"></a>Ссылки</h1><ul>
<li><a href="https://github.com/confar/web-parsing-tech-news" target="_blank" rel="external">Полный код можно найти в моем репозитории на github</a></li>
<li><a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/" target="_blank" rel="external">Документация BeautifulSoup</a></li>
<li><a href="http://pbpython.com/web-scraping-mn-budget.html" target="_blank" rel="external">Классная статья о скрейпинге общественных ресурсов</a></li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Сегодня поговорим о веб скрапинге. Допустим, стоит задача выгрузить информацию с сайта или нескольких и представить ее в таблице. Для при
    
    </summary>
    
    
      <category term="python" scheme="http://confar.github.io/blog/tags/python/"/>
    
      <category term="scraping" scheme="http://confar.github.io/blog/tags/scraping/"/>
    
      <category term="pandas" scheme="http://confar.github.io/blog/tags/pandas/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://confar.github.io/blog/2017/10/07/hello-world/"/>
    <id>http://confar.github.io/blog/2017/10/07/hello-world/</id>
    <published>2017-10-07T18:23:17.467Z</published>
    <updated>2017-10-17T19:32:10.014Z</updated>
    
    <content type="html"><![CDATA[<p>Решил поднять сайт. Тут будут различные заметки про программирование и аналитику.</p>
<script src="//gist.github.com/e1729db6e87fa95ef2d2c44c303e748f.js"></script>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Решил поднять сайт. Тут будут различные заметки про программирование и аналитику.&lt;/p&gt;
&lt;script src=&quot;//gist.github.com/e1729db6e87fa95ef2d2
    
    </summary>
    
    
      <category term="python" scheme="http://confar.github.io/blog/tags/python/"/>
    
  </entry>
  
</feed>
